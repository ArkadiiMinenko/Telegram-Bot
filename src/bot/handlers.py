from telegram import Update, BotCommand, Message as TelegramMessage, Chat
from telegram.ext import ContextTypes, MessageHandler, filters, CommandHandler
from loguru import logger
from sqlalchemy.orm import Session
from src.db.models import Message
from src.db.database import get_db
from src.bot.logic import transliterate_to_ua, transliterate_to_en

def extract_command_text(text: str, entity) -> str:
    """–í–∏—Ç—è–≥—É—î —Ç–µ–∫—Å—Ç –ø—ñ—Å–ª—è –∫–æ–º–∞–Ω–¥–∏, –≤—Ä–∞—Ö–æ–≤—É—é—á–∏ @BotUsername"""
    command_end = entity.offset + entity.length
    return text[command_end:].strip()

async def save_message(message: TelegramMessage, db: Session):
    """–ó–±–µ—Ä—ñ–≥–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö"""
    try:
        if not message.text:
            logger.info("–ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
            return None
            
        # –ù–µ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –±–æ—Ç—ñ–≤
        if message.from_user.is_bot:
            logger.info(f"–ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –±–æ—Ç–∞: {message.from_user.username}")
            return None
            
        logger.info(f"–ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –ë–î - ID: {message.message_id}, Chat: {message.chat_id}, Text: {message.text}")
        db_message = Message(
            message_id=message.message_id,
            chat_id=message.chat_id,
            user_id=message.from_user.id,
            original_text=message.text,
            translated_text="",  # –ë—É–¥–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ
            translation_type=""  # –ë—É–¥–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–æ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ
        )
        db.add(db_message)
        db.commit()
        db.refresh(db_message)
        logger.info(f"‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –ë–î - ID: {db_message.message_id}")
        return db_message
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ –ë–î: {e}")
        return None

async def get_message_by_id(message_id: int, chat_id: int, db: Session) -> Message:
    """–û—Ç—Ä–∏–º—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑–∞ message_id —Ç–∞ chat_id"""
    try:
        logger.info(f"–®—É–∫–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –ë–î - ID: {message_id}, Chat: {chat_id}")
        message = db.query(Message).filter(
            Message.message_id == message_id,
            Message.chat_id == chat_id
        ).first()
        if message:
            logger.info(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –ë–î - Text: {message.original_text}")
        else:
            logger.info(f"‚ùå –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –ë–î - ID: {message_id}, Chat: {chat_id}")
        return message
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É –≤ –ë–î: {e}")
        return None

async def handle_translation(update: Update, context: ContextTypes.DEFAULT_TYPE, translation_func, translation_type: str):
    """–ó–∞–≥–∞–ª—å–Ω–∏–π –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –æ–±–æ—Ö —Ç–∏–ø—ñ–≤ –ø–µ—Ä–µ–∫–ª–∞–¥—É"""
    try:
        if not update.effective_message:
            logger.error("No effective message found")
            return

        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–∏–ø —á–∞—Ç—É
        chat_type = update.effective_message.chat.type
        logger.info(f"Processing translation in chat type: {chat_type}")

        if not update.effective_message.reply_to_message:
            help_text = (
                "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É —è–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏.\n\n"
                "–í –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É —á–∞—Ç—ñ:\n"
                "1. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Ç–µ–∫—Å—Ç\n"
                "2. –í—ñ–¥–ø–æ–≤—ñ–¥—å—Ç–µ –Ω–∞ –Ω—å–æ–≥–æ –∫–æ–º–∞–Ω–¥–æ—é\n\n"
                "–í –≥—Ä—É–ø–æ–≤–æ–º—É —á–∞—Ç—ñ:\n"
                "1. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Ç–µ–∫—Å—Ç\n"
                "2. –í—ñ–¥–ø–æ–≤—ñ–¥—å—Ç–µ –Ω–∞ –Ω—å–æ–≥–æ –∫–æ–º–∞–Ω–¥–æ—é –∑ –º–æ—ó–º —ñ–º–µ–Ω–µ–º\n"
                "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: /translateua@BotUsername"
            )
            await update.effective_message.reply_text(help_text)
            return

        reply_to_message = update.effective_message.reply_to_message
        logger.info(f"Reply to message: {reply_to_message.text[:50]}...")
        
        db = next(get_db())
        
        # –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –ë–î
        original_message = await get_message_by_id(reply_to_message.message_id, reply_to_message.chat_id, db)
        
        if not original_message:
            # –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ–º–∞—î –≤ –ë–î, —Å–ø—Ä–æ–±—É—î–º–æ –∑–±–µ—Ä–µ–≥—Ç–∏ –π–æ–≥–æ
            original_message = await save_message(reply_to_message, db)
            
        if not original_message:
            await update.effective_message.reply_text(
                "–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª–∞–¥—É. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î—Ç–µ –Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è."
            )
            return

        # –ü–µ—Ä–µ–∫–ª–∞–¥–∞—î–º–æ —Ç–µ–∫—Å—Ç
        translated_text = translation_func(original_message.original_text)
        logger.info(f"Translated text: {original_message.original_text} -> {translated_text}")
        
        # –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ø–∏—Å –≤ –ë–î
        original_message.translated_text = translated_text
        original_message.translation_type = translation_type
        db.commit()
        
        # –§–æ—Ä–º—É—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–∏–ø—É —á–∞—Ç—É
        if chat_type == Chat.PRIVATE:
            reply_text = translated_text
        else:
            # –í –≥—Ä—É–ø–æ–≤–∏—Ö —á–∞—Ç–∞—Ö –¥–æ–¥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
            reply_text = f"–û—Ä–∏–≥—ñ–Ω–∞–ª: {original_message.original_text}\n–ü–µ—Ä–µ–∫–ª–∞–¥: {translated_text}"
        
        await update.effective_message.reply_text(reply_text)
        logger.info(f"Successfully sent translation in {chat_type} chat: {original_message.original_text} -> {translated_text}")
            
    except Exception as e:
        logger.error(f"Error in translation handler: {e}")
        if update.effective_message:
            await update.effective_message.reply_text("–í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª–∞–¥—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

async def translate_ua(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /translateUA - –ø–µ—Ä–µ–∫–ª–∞–¥–∞—î —Ç–µ–∫—Å—Ç –∑ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó —Ä–æ–∑–∫–ª–∞–¥–∫–∏ –≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É"""
    await handle_translation(update, context, transliterate_to_ua, 'UA')

async def translate_en(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /translateEN - –ø–µ—Ä–µ–∫–ª–∞–¥–∞—î —Ç–µ–∫—Å—Ç –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó —Ä–æ–∑–∫–ª–∞–¥–∫–∏ –≤ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É"""
    await handle_translation(update, context, transliterate_to_en, 'EN')

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /help - –ø–æ–∫–∞–∑—É—î —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–º–∞–Ω–¥"""
    logger.info("Received help command")
    chat_type = update.effective_message.chat.type
    
    if chat_type == Chat.PRIVATE:
        help_text = (
            "ü§ñ –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ç—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É.\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
            "/translateua - –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏ —Ç–µ–∫—Å—Ç –∑ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó —Ä–æ–∑–∫–ª–∞–¥–∫–∏ –≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É\n"
            "/translateen - –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏ —Ç–µ–∫—Å—Ç –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó —Ä–æ–∑–∫–ª–∞–¥–∫–∏ –≤ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É\n"
            "/help - –ø–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n\n"
            "–Ø–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏:\n"
            "1. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Ç–µ–∫—Å—Ç, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏\n"
            "2. –í—ñ–¥–ø–æ–≤—ñ–¥—å—Ç–µ –Ω–∞ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–æ—é /translateua –∞–±–æ /translateen\n"
            "3. –û—Ç—Ä–∏–º–∞–π—Ç–µ –ø–µ—Ä–µ–∫–ª–∞–¥\n\n"
            "–ü—Ä–∏–∫–ª–∞–¥–∏:\n"
            "‚Ä¢ ghbdtn -> –ø—Ä–∏–≤—ñ—Ç (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /translateua)\n"
            "‚Ä¢ –ø—Ä–∏–≤—ñ—Ç -> ghbdtn (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /translateen)"
        )
    else:
        help_text = (
            "ü§ñ –ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ç—Ä–∞–Ω—Å–ª—ñ—Ç–µ—Ä–∞—Ü—ñ—ó —Ç–µ–∫—Å—Ç—É.\n\n"
            "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
            "/translateua@BotUsername - –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏ —Ç–µ–∫—Å—Ç –∑ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó —Ä–æ–∑–∫–ª–∞–¥–∫–∏ –≤ —É–∫—Ä–∞—ó–Ω—Å—å–∫—É\n"
            "/translateen@BotUsername - –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏ —Ç–µ–∫—Å—Ç –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó —Ä–æ–∑–∫–ª–∞–¥–∫–∏ –≤ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É\n"
            "/help@BotUsername - –ø–æ–∫–∞–∑–∞—Ç–∏ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è\n\n"
            "–Ø–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –≤ –≥—Ä—É–ø–æ–≤–æ–º—É —á–∞—Ç—ñ:\n"
            "1. –í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Ç–µ–∫—Å—Ç, —è–∫–∏–π –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø–µ—Ä–µ–∫–ª–∞—Å—Ç–∏\n"
            "2. –í—ñ–¥–ø–æ–≤—ñ–¥—å—Ç–µ –Ω–∞ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ–º–∞–Ω–¥–æ—é –∑ –º–æ—ó–º —ñ–º–µ–Ω–µ–º\n"
            "3. –û—Ç—Ä–∏–º–∞–π—Ç–µ –ø–µ—Ä–µ–∫–ª–∞–¥ –∑ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–∏–º —Ç–µ–∫—Å—Ç–æ–º\n\n"
            "–ü—Ä–∏–∫–ª–∞–¥–∏:\n"
            "‚Ä¢ ghbdtn -> –ø—Ä–∏–≤—ñ—Ç (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /translateua@BotUsername)\n"
            "‚Ä¢ –ø—Ä–∏–≤—ñ—Ç -> ghbdtn (–≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /translateen@BotUsername)"
        )
    
    await update.message.reply_text(help_text)
    logger.info(f"Help message sent in {chat_type} chat")

async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—Å—ñ—Ö —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    if not update.message or not update.message.text:
        return

    try:
        db = next(get_db())
        await save_message(update.message, db)
    except Exception as e:
        logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ –æ–±—Ä–æ–±–Ω–∏–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å: {e}")

async def setup_commands(application):
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤ –º–µ–Ω—é –±–æ—Ç–∞"""
    logger.info("Setting up bot commands")
    commands = [
        BotCommand("translateua", "–ü–µ—Ä–µ–∫–ª–∞–¥ –∑ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó —Ä–æ–∑–∫–ª–∞–¥–∫–∏"),
        BotCommand("translateen", "–ü–µ—Ä–µ–∫–ª–∞–¥ –∑ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó —Ä–æ–∑–∫–ª–∞–¥–∫–∏"),
        BotCommand("help", "–ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–≤—ñ–¥–∫—É")
    ]
    await application.bot.set_my_commands(commands)
    logger.info("Bot commands set up successfully")

def setup_handlers(application):
    """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –∫–æ–º–∞–Ω–¥ —Ç–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å"""
    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –¥–ª—è –≤—Å—ñ—Ö —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))
    
    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("translateua", translate_ua))
    application.add_handler(CommandHandler("translateen", translate_en))
    application.add_handler(CommandHandler("help", help_command))
    logger.info("Handlers set up successfully") 